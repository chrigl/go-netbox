// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2018 The go-netbox Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/digitalocean/go-netbox/netbox/models"
)

// APIExtrasTagsPartialUpdateReader is a Reader for the APIExtrasTagsPartialUpdate structure.
type APIExtrasTagsPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APIExtrasTagsPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAPIExtrasTagsPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAPIExtrasTagsPartialUpdateOK creates a APIExtrasTagsPartialUpdateOK with default headers values
func NewAPIExtrasTagsPartialUpdateOK() *APIExtrasTagsPartialUpdateOK {
	return &APIExtrasTagsPartialUpdateOK{}
}

/*APIExtrasTagsPartialUpdateOK handles this case with default header values.

APIExtrasTagsPartialUpdateOK api extras tags partial update o k
*/
type APIExtrasTagsPartialUpdateOK struct {
	Payload *models.Tag
}

func (o *APIExtrasTagsPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /api/extras/tags/{id}/][%d] apiExtrasTagsPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *APIExtrasTagsPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Tag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
